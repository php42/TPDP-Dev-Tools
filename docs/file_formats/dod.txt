.dod files contain a definition for a trainer battle.
this file contains the name and title for a particular trainer, as well as their party of puppets.
the puppets are encrypted, see puppet.h in libtpdp for the encryption algorithm. gn_dat1/common/Efile.bin is used as a source of random data (seed) to perform the encryption.
if you're clever, you can defeat the encryption without the use of efile.bin, but since the algorithm is known and efile.bin is available i don't bother with that method.

"style": style index (0-3 inclusive). corresponds to the style array in DollData.dbs, check DollData.json to see which one is which (json arrays mirror the binary).
"ability": ability index (0 or 1). 0 = 1st ability, 1 = 2nd ability. check DollData.json.
"costume": costume index (0-3 inclusive). 0 = normal, 1 = alt color, 2 = alt outfit, 3 = wedding dress
"experience": puppet exp. used to determine level. see exp_for_level() in gamedata.cpp (libtpdp) for the exp algorithm. google will probably work too.
"mark": none, red (F.Atk), blue (F.Def), black (S.Atk), white (S.Def), green (Speed)
"held_item": item id
"ivs": 0-15. 0 = E-, 15 = S. in order: hp, f.atk, f.def, s.atk, s.def, speed
"evs": exactly as in-game. order same as ivs
"intro_text_id": id of the text file that's displayed at the beginning of battle. located in gn_dat5/scripts/talk
"end_text_id": same as above but for the text displayed at the end of the battle.
"portrait_id": id of the trainer portrait image to display.
"start_bgm": ID of music played during initial dialogue before the battle begins.
"battle_bgm": ID of music played during battle.
"victory_bgm": ID of music played on the result screen.
"defeat_text_id": ID of the text file that's displayed when the player is defeated by the trainer.
"ai_difficulty": difficulty of trainer AI (valid values are 0, 1, 2).


---BINARY FORMAT---
                         _
0x0000: char name[32]     |
0x0020: u16 portrait_id   |
0x0022: u8  start_bgm     |
0x0023: u8  battle_bgm    |
0x0024: u8  victory_bgm   |
0x0025: u16 intro_text_id |
0x0027: u16 end_text_id   |--0x42A
0x0029: u16 defeat_text_id|
0x002B: u8  ai_difficulty |
0x002C: puppet[6]         | (0x95 per puppet)
0x03AA: char title[128]  _|

you will probably want to consult puppet.h, puppet.cpp, and binedit.cpp (encrypt_puppet(), decrypt_puppet(), convert_dod())
see puppet.txt for a description of the puppet format
